// generated with ast extension for cup
// version 0.8
// 27/5/2024 3:27:41


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(PrintOptions PrintOptions);
    public void visit(Mulop Mulop);
    public void visit(DesignatorOptions DesignatorOptions);
    public void visit(Relop Relop);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(StatementList StatementList);
    public void visit(ConstDeclOptionsListExists ConstDeclOptionsListExists);
    public void visit(Addop Addop);
    public void visit(ConstOne ConstOne);
    public void visit(Factor Factor);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(DeclOne DeclOne);
    public void visit(VarDeclPartList VarDeclPartList);
    public void visit(MulopFactorListExists MulopFactorListExists);
    public void visit(VarDeclPartListExists VarDeclPartListExists);
    public void visit(VarDeclList VarDeclList);
    public void visit(AddopTermListExists AddopTermListExists);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(SqBracesOption SqBracesOption);
    public void visit(TypeOptions TypeOptions);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(MinusOption MinusOption);
    public void visit(ConstDeclOptionsList ConstDeclOptionsList);
    public void visit(AddopTermList AddopTermList);
    public void visit(ModOp ModOp);
    public void visit(DivOp DivOp);
    public void visit(MulOpMul MulOpMul);
    public void visit(MinusOp MinusOp);
    public void visit(PlusOp PlusOp);
    public void visit(LTEOp LTEOp);
    public void visit(LTOp LTOp);
    public void visit(GTEOp GTEOp);
    public void visit(GTOp GTOp);
    public void visit(NotEqualOp NotEqualOp);
    public void visit(EqualityOp EqualityOp);
    public void visit(AssignOp AssignOp);
    public void visit(Label Label);
    public void visit(Type Type);
    public void visit(RangeFactor RangeFactor);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewFactor NewFactor);
    public void visit(BoolConstFactor BoolConstFactor);
    public void visit(CharConstFactor CharConstFactor);
    public void visit(NumConstFactor NumConstFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(MulopFactorListOne MulopFactorListOne);
    public void visit(MulopFactorListMany MulopFactorListMany);
    public void visit(NoMulopFactorList NoMulopFactorList);
    public void visit(MulopFactorListExist MulopFactorListExist);
    public void visit(Term Term);
    public void visit(NoMinus NoMinus);
    public void visit(Minus Minus);
    public void visit(AddopTermListOne AddopTermListOne);
    public void visit(AddopTermListMany AddopTermListMany);
    public void visit(NoAddopTermList NoAddopTermList);
    public void visit(AddopTermListExist AddopTermListExist);
    public void visit(Expr Expr);
    public void visit(NoDesignatorOptions NoDesignatorOptions);
    public void visit(DesignatorOption DesignatorOption);
    public void visit(DesignatorName DesignatorName);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorSingle DesignatorSingle);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorInc DesignatorInc);
    public void visit(DesignatorAssignopExpr DesignatorAssignopExpr);
    public void visit(NoPrintOptions NoPrintOptions);
    public void visit(PrintOption PrintOption);
    public void visit(StatementDerived1 StatementDerived1);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(DesignatorStatementOp DesignatorStatementOp);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementListMany StatementListMany);
    public void visit(VoidOption VoidOption);
    public void visit(TypeOption TypeOption);
    public void visit(FunctionTypeName FunctionTypeName);
    public void visit(FunctionMain FunctionMain);
    public void visit(VarDeclPartOne VarDeclPartOne);
    public void visit(VarDeclPartListOne VarDeclPartListOne);
    public void visit(VarDeclPartListMany VarDeclPartListMany);
    public void visit(NoVarDeclPartList NoVarDeclPartList);
    public void visit(VarDeclPartListExist VarDeclPartListExist);
    public void visit(NoSqBraces NoSqBraces);
    public void visit(SqBraces SqBraces);
    public void visit(VarDeclOne VarDeclOne);
    public void visit(VarErrorSemi VarErrorSemi);
    public void visit(VarErrorComma VarErrorComma);
    public void visit(VarDeclarationOne VarDeclarationOne);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(VarDeclListMany VarDeclListMany);
    public void visit(ConstDeclOptionsListOne ConstDeclOptionsListOne);
    public void visit(ConstDeclOptionsListMany ConstDeclOptionsListMany);
    public void visit(NoConstDeclOptions NoConstDeclOptions);
    public void visit(ConstDeclOptionsListExist ConstDeclOptionsListExist);
    public void visit(BoolConstant BoolConstant);
    public void visit(CharConstant CharConstant);
    public void visit(NumConst NumConst);
    public void visit(ConstDecl ConstDecl);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDeclList NoDeclList);
    public void visit(DeclListMore DeclListMore);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
